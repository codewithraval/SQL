CREATE DATABASE WF1;
USE WF1;

CREATE TABLE BIT_STUDENTS (
STUDENT_ID INT,
STUDENT_BATCH VARCHAR (40),
STUDENT_NAME VARCHAR (40),
STUDENT_STREAM VARCHAR (40),
STUDENT_MARKS INT,
STUDENT_MAIL_ID VARCHAR(40));

insert into bit_students values(119 ,'fsds' , 'jalpa','EC',60,'jalpa@gmail.com');

select * from bit_students;
insert into bit_students values(100 ,'fsda' , 'saurabh','cs',80,'saurabh@gmail.com'),
(102 ,'fsda' , 'sanket','cs',81,'sanket@gmail.com'),
(103 ,'fsda' , 'shyam','cs',80,'shyam@gmail.com'),
(104 ,'fsda' , 'sanket','cs',82,'sanket@gmail.com'),
(105 ,'fsda' , 'shyam','ME',67,'shyam@gmail.com'),
(106 ,'fsds' , 'ajay','ME',45,'ajay@gmail.com'),
(106 ,'fsds' , 'ajay','ME',78,'ajay12@gmail.com'),
(108 ,'fsds' , 'snehal','CI',89,'snehal@gmail.com'),
(109 ,'fsds' , 'manisha','CI',34,'manisha@gmail.com'),
(110 ,'fsds' , 'rakesh','CI',45,'rakesh@gmail.com'),
(111 ,'fsde' , 'anuj','CI',43,'anuj@gmail.com'),
(112 ,'fsde' , 'mohit','EE',67,'mohit@gmail.com'),
(113 ,'fsde' , 'vivek','EE',23,'vivek@gmail.com'),
(114 ,'fsde' , 'gaurav','EE',45,'gaurav@gmail.com'),
(115 ,'fsde' , 'prateek','EE',89,'prateek@gmail.com'),
(116 ,'fsde' , 'mithun','ECE',23,'mithun@gmail.com'),
(117 ,'fsbc' , 'chaitra','ECE',23,'chaitra@gmail.com'),
(118 ,'fsbc' , 'pranay','ECE',45,'pranay@gmail.com'),
(119 ,'fsbc' , 'sandeep','ECE',65,'sandeep@gmail.com');

SELECT MAX(STUDENT_MARKS),STUDENT_BATCH FROM BIT_STUDENTS GROUP BY STUDENT_BATCH ;

SELECT COUNT(STUDENT_NAME),STUDENT_BATCH FROM BIT_STUDENTS GROUP BY STUDENT_BATCH ;

SELECT STUDENT_MARKS,STUDENT_BATCH FROM BIT_STUDENTS  WHERE  STUDENT_BATCH = "FSDA" ORDER BY STUDENT_MARKS DESC LIMIT 3 ;

SELECT STUDENT_MARKS,STUDENT_BATCH FROM BIT_STUDENTS  WHERE  STUDENT_BATCH = "FSDA" ORDER BY STUDENT_MARKS DESC LIMIT 3,4 ;

SELECT * FROM BIT_STUDENTS WHERE STUDENT_MARKS =(
SELECT MIN(STUDENT_MARKS) FROM 
(SELECT STUDENT_MARKS FROM BIT_STUDENTS WHERE STUDENT_BATCH = "FSDA" 
ORDER BY STUDENT_MARKS DESC
LIMIT 3 ) AS TOP); 

SELECT STUDENT_ID,STUDENT_BATCH,STUDENT_STREAM,STUDENT_MARKS,
ROW_NUMBER() OVER(ORDER BY STUDENT_MARKS) AS "ROW_NUMBER" FROM BIT_STUDENTS;


SELECT * FROM (SELECT STUDENT_ID,STUDENT_BATCH,STUDENT_STREAM,
STUDENT_MARKS,
ROW_NUMBER() OVER(PARTITION BY STUDENT_BATCH ORDER BY 
STUDENT_MARKS DESC) AS "ROW_NUM" 
FROM BIT_STUDENTS) AS TEST WHERE ROW_NUM = 3;

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC)
AS "ROW_NUM" FROM BIT_STUDENTS;


SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER( ORDER BY STUDENT_MARKS DESC) AS "ROW_NUM" ,
RANK() OVER( ORDER BY STUDENT_MARKS DESC ) AS "RANK_NUM" 
FROM BIT_STUDENTS ;


SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "ROW_NUM" ,
RANK() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC ) AS "RANK_NUM" 
FROM BIT_STUDENTS ;

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "ROW_NUM" ,
RANK() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC ) AS "RANK_NUM" ,
DENSE_RANK() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "SENSE_RENK"
FROM BIT_STUDENTS ;


SELECT * FROM (SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "ROW_NUM" ,
RANK() OVER(PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC ) AS "RANK_NUM" ,
DENSE_RANK() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "DENSE_RENK"
FROM BIT_STUDENTS)AS TEST WHERE  "DENSE_RENK" < 5 ;

#ROW_NUMBER

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
ROW_NUMBER() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "ROW_NUMBER"
FROM BIT_STUDENTS;

# RANK

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
RANK() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "RANK"
FROM BIT_STUDENTS;


#DENSE_RANK

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
DENSE_RANK() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS DESC) AS "DENSE_RANK"
FROM BIT_STUDENTS;


## PERCENT_RANK

SELECT STUDENT_ID ,STUDENT_BATCH ,STUDENT_STREAM,STUDENT_MARKS ,
PERCENT_RANK() OVER (PARTITION BY STUDENT_BATCH ORDER BY STUDENT_MARKS ) AS "PERCENT"
FROM BIT_STUDENTS;

