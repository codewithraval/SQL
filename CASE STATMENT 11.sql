USE PARTITION1;
CREATE TABLE BIT_COURSE(
COURSE_NAME VARCHAR(50),
COURSE_ID INT(10),
COURSE_TITLE VARCHAR(60),
COURSE_DESC VARCHAR(60),
LAUNCH_DATE DATE,
COURSE_FEE INT,
COURSE_MONITOR VARCHAR(60),
COURSE_LAUNCH_YEAR INT);
SELECT * FROM BIT_COURSE;
insert into bit_course values('machine_learning' , 101 , 'ML', "this is ML course" ,'2019-07-07',3540,'jalpa',2019) ,
('aiops' , 101 , 'ML', "this is aiops course" ,'2019-07-07',3540,'jalpa',2019) ,
('dlcvnlp' , 101 , 'ML', "this is ML course" ,'2020-07-07',3540,'jalpa',2020) ,
('aws cloud' , 101 , 'ML', "this is ML course" ,'2020-07-07',3540,'jalpa',2020) ,
('blockchain' , 101 , 'ML', "this is ML course" ,'2021-07-07',3540,'jalpa',2021) ,
('RL' , 101 , 'ML', "this is ML course" ,'2022-07-07',3540,'jalpa',2022) ,
('Dl' , 101 , 'ML', "this is ML course" ,'2022-07-07',3540,'jalpa',2022) ,
('interview prep' , 101 , 'ML', "this is ML course" ,'2019-07-07',3540,'jalpa',2019) ,
('big data' , 101 , 'ML', "this is ML course" ,'2020-07-07',3540,'sudhanshu',2020) ,
('data analytics' , 101 , 'ML', "this is ML course" ,'2021-07-07',3540,'jalpa',2021) ,
('fsds' , 101 , 'ML', "this is ML course" ,'2022-07-07',3540,'jalpa',2022) ,
('fsda' , 101 , 'ML', "this is ML course" ,'2021-07-07',3540,'jalpa',2021) ,
('fabe' , 101 , 'ML', "this is ML course" ,'2022-07-07',3540,'jalpa',2022) ,
('java' , 101 , 'ML', "this is ML course" ,'2020-07-07',3540,'jalpa',2020) ,
('MERN' , 101 , 'ML', "this is ML course" ,'2019-07-07',3540,'jalpa',2019);


SELECT * FROM bit_course WHERE COURSE_LAUNCH_YEAR = 2019;

SELECT *,
CASE 
     WHEN COURSE_NAME = 'JAVA' THEN SYSDATE()
     WHEN COURSE_NAME = 'FSDS' THEN SYSTEM_USER()
     WHEN COURSE_NAME = 'FSDA' THEN 'JAPLA'
     ELSE ' THIS NOT YOUR BATCH'
END AS STATMENT
FROM bit_course;



UPDATE BIT_COURSE
SET COURSE_TITLE = 
CASE    
WHEN COURSE_TITLE = 'ML' THEN 'machine_learning'
ELSE COURSE_TITLE
END;


UPDATE BIT_COURSE
SET COURSE_MONITOR = 
CASE    
WHEN COURSE_MONITOR = 'JALPA' THEN 'JALPA DESAI'
ELSE COURSE_MONITOR
END;

SELECT *,
CASE
     WHEN COURSE_LAUNCH_YEAR = 2019 THEN 'COURSE LAUNCH 2019'
      WHEN COURSE_LAUNCH_YEAR = 2020 THEN 'COURSE LAUNCH 2020'
       WHEN COURSE_LAUNCH_YEAR = 2021 THEN 'COURSE LAUNCH 2021'
       ELSE "THERE IS NO COURE SELECT"
	END AS STAMENT2
    FROM BIT_COURSE;
    
    SELECT *,
    CASE
         WHEN COURSE_MONITOR = 'JALPA DESAI' THEN 'BHARGAV RAVAL'
    ELSE COURSE_MONITOR
    END STATMENT4
FROM BIT_COURSE;
    
UPDATE BIT_COURSE
SET COURSE_ID =
CASE 
      WHEN COURSE_ID = 1 THEN 101
      ELSE 0
      END;
    
    SELECT * FROM BIT_COURSE;
    
UPDATE BIT_COURSE
SET COURSE_NAME =
CASE    
WHEN COURSE_NAME = 'FSDS' THEN  'FULL STACK DATA SCINCE'
ELSE COURSE_NAME
END;  

ALTER TABLE BIT_COURSE
ADD COLUMN COURSE_YEAR VARCHAR (30);

UPDATE BIT_COURSE
SET COURSE_YEAR = CASE
          WHEN COURSE_LAUNCH_YEAR = 2019 THEN 'COURSE LAUNCH 2019'
      WHEN COURSE_LAUNCH_YEAR = 2020 THEN 'COURSE LAUNCH 2020'
       WHEN COURSE_LAUNCH_YEAR = 2021 THEN 'COURSE LAUNCH 2021'
       ELSE "THERE IS NO COURE SELECT"
	END ;
#----------------------------------------- NEW DATA ------------------------------------------------------------------------#

CREATE TABLE EMPLOYEE(
E_ID INT PRIMARY KEY,
E_NAME VARCHAR(100),  
GENDER VARCHAR (1) NOT NULL,
STATECODE VARCHAR(20) NOT NULL,
SALARY DECIMAL(10,2) NOT NULL);

INSERT INTO EMPLOYEE VALUES (211, 'Manisha', 'F', 'IN', 80000.0000);
INSERT INTO EMPLOYEE VALUES (212, 'Vikas', 'M', 'IN', 5000.0000);
INSERT INTO EMPLOYEE VALUES (201, 'Jerome', 'M', 'FL', 83000.0000);
INSERT INTO EMPLOYEE VALUES (202, 'Ray', 'M', 'AL', 88000.0000);
INSERT INTO EMPLOYEE VALUES (203, 'Stella', 'F', 'AL', 76000.0000);
INSERT INTO EMPLOYEE VALUES (204, 'Gilbert', 'M', 'Ar', 42000.0000);
INSERT INTO EMPLOYEE VALUES (205, 'Edward', 'M', 'FL', 93000.0000);
INSERT INTO EMPLOYEE VALUES (206, 'Ernest', 'F', 'Al', 64000.0000);
INSERT INTO EMPLOYEE VALUES  (207, 'Jorge', 'F', 'IN', 75000.0000);
INSERT INTO EMPLOYEE VALUES  (208, 'Nicholas', 'F', 'Ge', 71000.0000);
INSERT INTO EMPLOYEE VALUES (209, 'Lawrence', 'M', 'IN', 95000.0000);
INSERT INTO EMPLOYEE VALUES (210, 'Salvador', 'M', 'Co', 75000.0000);


SELECT * FROM EMPLOYEE;

SELECT *,
CASE 
     WHEN SALARY >=10000 AND SALARY <30000 THEN "DATE ANALYST TRAINEE"
       WHEN SALARY >=30000 AND SALARY <50000 THEN "DATE ANALYST "
         WHEN SALARY >=50000 AND SALARY <80000 THEN "CONSULTANT"
           WHEN SALARY >=80000 AND SALARY <010000 THEN " SENIOR CONSULTANT"
             WHEN SALARY >=100000  THEN "SENIOR FOLKS"
	ELSE "CONTRACTOR"
    END AS DESIGNATION
    FROM EMPLOYEE;
    
    
    
SELECT E_NAME,GENDER, SALARY FROM EMPLOYEE ORDER BY 
CASE 
            GENDER WHEN  "F" THEN SALARY END DESC ,
          CASE WHEN GENDER = "M" THEN SALARY
		END;
SELECT * FROM EMPLOYEE WHERE GENDER = "F" ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEE WHERE GENDER = "M" ORDER BY SALARY ;




SELECT SALARY,
CASE 
     WHEN SALARY >=10000 AND SALARY <30000 THEN "DATE ANALYST TRAINEE"
       WHEN SALARY >=30000 AND SALARY <50000 THEN "DATE ANALYST "
         WHEN SALARY >=50000 AND SALARY <80000 THEN "CONSULTANT"
           WHEN SALARY >=80000 AND SALARY <010000 THEN " SENIOR CONSULTANT"
             WHEN SALARY >=100000  THEN "SENIOR FOLKS"
	ELSE "CONTRACTOR"
    END AS D,MIN(SALARY) AS "MIN SALARY",MAX(SALARY) AS "MAX SALRY"
    FROM EMPLOYEE
    GROUP BY CASE 
     WHEN SALARY >=10000 AND SALARY <30000 THEN "DATE ANALYST TRAINEE"
       WHEN SALARY >=30000 AND SALARY <50000 THEN "DATE ANALYST "
         WHEN SALARY >=50000 AND SALARY <80000 THEN "CONSULTANT"
           WHEN SALARY >=80000 AND SALARY <010000 THEN " SENIOR CONSULTANT"
             WHEN SALARY >=100000  THEN "SENIOR FOLKS"
	ELSE "CONTRACTOR"
    END;

## Suppose we want to group employee base on their salary.we furthar want to calculate 
## the minimum and maximum salary for a particular range of employee.

ALTER TABLE EMPLOYEE
ADD COLUMN DESIGNATION VARCHAR (30);

UPDATE EMPLOYEE
SET DESIGNATION =
CASE 
     WHEN SALARY >=10000 AND SALARY <30000 THEN "DATE ANALYST TRAINEE"
       WHEN SALARY >=30000 AND SALARY <50000 THEN "DATE ANALYST "
         WHEN SALARY >=50000 AND SALARY <80000 THEN "CONSULTANT"
           WHEN SALARY >=80000 AND SALARY <010000 THEN " SENIOR CONSULTANT"
             WHEN SALARY >=100000  THEN "SENIOR FOLKS"
	ELSE "CONTRACTOR"
    END ;    
    
SELECT DESIGNATION,MIN(SALARY),MAX(SALARY) FROM EMPLOYEE GROUP BY DESIGNATION;

SELECT * FROM EMPLOYEE;



